apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: "io.spring.dependency-management"
apply plugin: 'spring-cloud-contract'
apply plugin: 'checkstyle'

group 'com.audibene'
version '1.0.1'

sourceCompatibility = 1.8

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:$springContractVerifierVersion"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

repositories {
    mavenCentral()
}


configurations {
    runtime.exclude module: 'spring-boot-starter-tomcat'
}

// Common
dependencies {
    compileClasspath group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
}

// Spring
dependencies {
    compile "org.springframework.boot:spring-boot-starter-jersey"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-undertow"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
}

//Test
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.projectlombok:lombok:$lombokVersion"
    testCompile "org.springframework.cloud:spring-cloud-starter-contract-verifier"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
}

// Database
dependencies {

    compile "org.hibernate:hibernate-core:$hibernateVersion"
    compile "org.hibernate:hibernate-hikaricp:$hibernateVersion"
    compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
    compile "org.hibernate:hibernate-validator:6.0.7.Final"

    runtime "com.h2database:h2:$h2Version"
    compile "org.postgresql:postgresql:$postgresqlVersion"
}
dependencies {
    // ... other dependencies
    compile('org.modelmapper:modelmapper:1.1.0')
    compile('org.hibernate:hibernate-java8:5.1.0.Final')
    compile group: 'io.swagger', name: 'swagger-jersey2-jaxrs', version: '1.5.21'
}

// Jersey
dependencies {
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
}

contracts {
    testMode = "JaxRsClient"
    baseClassForTests = "com.audibene.base.WebBaseTest"
    basePackageForTests = 'accurest'
    generatedTestSourcesDir = file("${project.buildDir}/generated-test-sources/contracts")
}

checkstyle {
    toolVersion = checkstyleVersion
    configFile = rootProject.file('checkstyle.xml')
}

// Avoid running checkstyle on generated sources
checkstyleTest.source = "src/test/java"
